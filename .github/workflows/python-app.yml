# This workflow installs dependencies, runs linting, tests, and can start a Flask application.

name: Python application with Flask and LSA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --exclude=venv --show-source --statistics
        # Exit-zero treats all errors as warnings. Useful for development
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --exclude=venv --statistics


    - name: Test with pytest
      run: |
        pytest

    - name: Run Flask App (Optional)
      run: |
        export FLASK_APP=app.py
        flask run --host=0.0.0.0 --port=3000 &
        sleep 5  # Allow time for Flask app to start
        curl http://localhost:3000  # Check if Flask app responds
